<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moon.vip.application.inspect.InspectDetailSqlMapper">
	<resultMap id="BaseResultMap" type="com.moon.vip.model.inspect.InspectDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 23 
			15:54:17 CST 2015. -->
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="profession_id" property="professionId"
			jdbcType="INTEGER" />
		<result column="class_id" property="classId" jdbcType="INTEGER" />
		<result column="student_id" property="studentId" jdbcType="INTEGER" />
		<result column="inspect_date" property="inspectDate" jdbcType="DATE" />
		<result column="inspect_status" property="inspectStatus"
			jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="modify_user" property="modifyUser" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 23 
			15:54:17 CST 2015. -->
		ID, profession_id, class_id, student_id, inspect_date, inspect_status,
		create_time,
		creator, modify_time, modify_user, version
	</sql>
	<select id="selectId" resultType="java.lang.Integer"
		parameterType="com.moon.vip.model.inspect.InspectDetail">
		SELECT
		ID
		FROM
		vip_inspect_detail
		WHERE
		profession_id =
		#{professionId,jdbcType=INTEGER} AND
		class_id =
		#{classId,jdbcType=INTEGER} AND
		student_id =
		#{studentId,jdbcType=INTEGER} AND
		inspect_date =
		#{inspectDate,jdbcType=DATE}
	</select>
    <select id="checkIsInClass" resultType ="java.lang.Integer">
       SELECT 
         count(1) 
       FROM
         vip_student_class 
       WHERE 
         student_id  = #{studentId,jdbcType = INTEGER}  AND
         op_cla_id   = #{classId,jdbcType = INTEGER} AND
         is_valid = 'Y'
    </select>
	<insert id="insertSelective" parameterType="java.util.List">
		insert into vip_inspect_detail ( profession_id, class_id,
		student_id,
		inspect_date, inspect_status,
		create_time, creator, modify_time,
		modify_user, version)
		values
		<foreach collection="atRecords" item="item" index="index"
			separator=",">
			(#{item.professionId,jdbcType=INTEGER},
			#{item.classId,jdbcType=INTEGER},
			#{item.studentId,jdbcType=INTEGER},
			#{item.inspectDate,jdbcType=DATE},
			#{item.inspectStatus,jdbcType=INTEGER},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.creator,jdbcType=VARCHAR},
			#{item.modifyTime,jdbcType=TIMESTAMP},
			#{item.modifyUser,jdbcType=VARCHAR},
			#{item.version,jdbcType=INTEGER})
		</foreach>
	</insert>

	<select id="checkRepeat" resultType="java.lang.Integer">
		SELECT id
		FROM
		vip_inspect_detail a
		WHERE
		(a.class_id,a.student_id,a.inspect_date) in
		(select class_id,student_id,inspect_date from vip_inspect_detail group by
		class_id,student_id,inspect_date having count(*) > 1)
		and id not in
		(select max(id) from vip_inspect_detail group by
		class_id,student_id,inspect_date having count(*)>1)
	</select>
	<delete id="deleteRepeat" parameterType="java.util.List">
		delete from vip_inspect_detail
		where id in
		<foreach collection="repeatList" item="item" index="index"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<delete id="delRecordByParams" parameterType="com.moon.vip.infra.vo.attendance.DelAttenParamsVO">
		DELETE
		FROM vip_inspect_detail
		WHERE student_id = #{stuId,jdbcType
		=INTEGER}
		AND
		class_id = #{classId,jdbcType =INTEGER}
		<if test="date != null">
			
			 <![CDATA[ AND(  MONTH(inspect_date) = MONTH( DATE_FORMAT(#{date, jdbcType=DATE},'%y-%m-%d')))  ]]>
		</if>
	</delete>
	
	 <update id="updateRecordByParams" parameterType="com.moon.vip.infra.vo.attendance.DelAttenParamsVO" >
    update vip_inspect_detail
    <set>
		is_valid = 'N'
    </set>
    WHERE student_id = #{stuId,jdbcType=INTEGER} AND 
		class_id = #{classId,jdbcType =INTEGER}
   </update>
	
	
   
	<select id="findStuAttendByParams" resultType="com.moon.vip.infra.vo.attendance.StuAttendanceVO"
		parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams">
		SELECT * FROM(
		
			    SELECT
				stc.op_cla_id as classId,
				stc.student_id as stuId,
				stu.name AS stuName,
				stp.profession_code AS stuCode,
				stu.qq as stuQy,
				stu.telephone as stuTel,
				attend.attendanceSum, 
			    attend.absenceSum,
			    attend.leaveSum,
				vop.name as className
				FROM  (SELECT distinct student_id,op_pro_id,op_cla_id  FROM vip_student_class)  stc
				JOIN (SELECT student_id,op_pro_id ,profession_code,status from vip_student_professional where is_valid ='Y' and status not in('drop ','pause')) stp 
				ON   stc.student_id = stp.student_id and stc.op_pro_id = stp.op_pro_id 
				JOIN vip_student_archives stu 
				ON   stc.student_id = stu.ID and  stu.is_valid ='Y'
				JOIN (select id,name from vip_organizational_professional)  vop on  vop.id = stc.op_cla_id
				LEFT JOIN
					( SELECT SUM(attendnum) as attendanceSum, SUM(absentnum) as absenceSum,SUM(leavesnum) as leaveSum, class_id,student_id FROM 
							(  SELECT class_id,student_id,
							   CASE WHEN inspect_status = 1 THEN 1 ELSE 0 END attendnum,
							   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum,
							   CASE WHEN inspect_status = 2 THEN 1 ELSE 0 END leavesnum
							   FROM vip_inspect_detail WHERE 1 = 1 
							  <if test="startDate !=null and startDate !='' ">
		                          <![CDATA[ AND(  inspect_date > #{startDate, jdbcType=DATE})  ]]>
		                      </if>
							  <if test="endDate !=null and endDate !='' ">
						        <![CDATA[AND (  inspect_date < #{endDate, jdbcType=DATE}) ]]>
							  </if>
							  <if test="isUnAttend != null and isUnAttend == 1">
				                	AND inspect_status = 0
				              </if>
							) AS total   GROUP BY class_id , student_id 
					) attend 
				 ON attend.student_id = stc.student_id and attend.class_id = stc.op_cla_id 
				WHERE
				FIND_IN_SET(stc.op_cla_id, GETCHILDLIST(#{orgProCalId,jdbcType=INTEGER}))
		  <if test="opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="searchKey != null and searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>
				)
				AS total 
		  <if test="absenceSum != null">
			   where absenceSum >= #{absenceSum,jdbcType=INTEGER}
		  </if>
		    order by absenceSum desc
		    limit #{startNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		    
	</select>

	<select id="getCountStuAttendByParams" resultType="java.lang.Integer"
		parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams">
		SELECT count(1) FROM(
			    SELECT
				stu.name AS stuName,
				stp.profession_code AS stuCode,
				stu.qq as stuQy,
				stu.telephone as stuTel,
				
			    attend.absenceSum
		
				FROM (SELECT distinct student_id,op_pro_id,op_cla_id  FROM vip_student_class)  stc
				JOIN (SELECT student_id,op_pro_id ,profession_code,status from vip_student_professional where is_valid ='Y' and status not in('drop ','pause')) stp 
				ON   stc.student_id = stp.student_id and stc.op_pro_id = stp.op_pro_id 
				JOIN vip_student_archives stu 
				ON   stc.student_id = stu.ID and  stu.is_valid ='Y'
				LEFT JOIN
					(   SELECT  SUM(absentnum) as absenceSum, class_id,student_id FROM 
							(  SELECT class_id,student_id,
							   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum
							   FROM vip_inspect_detail WHERE 1 = 1 
							  <if test="startDate !=null and startDate !='' ">
		                          <![CDATA[ AND(inspect_date > #{startDate, jdbcType=DATE})  ]]>
		                      </if>
							  <if test="endDate !=null and endDate !='' ">
						        <![CDATA[AND (inspect_date < #{endDate, jdbcType=DATE}) ]]>
							  </if>
							  <if test="isUnAttend != null and isUnAttend == 1">
				                	AND inspect_status = 0
				              </if>
							) AS total   GROUP BY class_id , student_id 
					  )attend 
				ON attend.student_id = stc.student_id and attend.class_id = stc.op_cla_id
				WHERE
				FIND_IN_SET(op_cla_id, GETCHILDLIST(#{orgProCalId,jdbcType=INTEGER}))
				 <if test="opClaIds != null">
				        and stc.op_cla_id in
					    	    <foreach collection="opClaIds" item="Id" index="index"
		          					 open="(" close=")" separator=","> 
		          					  #{Id}
		  		                 </foreach>
				 </if>
				<if test="searchKey != null and searchKey!='' ">
					AND ( stu.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
					=VARCHAR}),'%')
					OR stp.profession_code like CONCAT(CONCAT('%',#{searchKey,jdbcType
					=VARCHAR}),'%')
					)
				</if>
	    	)
		   AS total
				<if test="absenceSum != null">
					WHERE absenceSum >= #{absenceSum,jdbcType=INTEGER};
				</if>
		</select>
		
		<select id="getStatisticData" resultType="com.moon.vip.infra.vo.attendance.AttendNumsVO">
	       SELECT  SUM(attendnum) as attendanceSums, SUM(absentnum) as absenceSums,sum(leavesnum) as leaveSums 
	       FROM(  
	             SELECT profession_id, atten.class_id,atten.student_id,atten.attendnum ,atten.absentnum,atten.leavesnum  from vip_student_class stc
                   JOIN(
                       SELECT id,class_id,student_id,profession_id,inspect_date, 
					   CASE WHEN inspect_status = 1 THEN 1 ELSE 0 END attendnum,
					   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum,
					   CASE WHEN inspect_status = 2 THEN 1 ELSE 0 END leavesnum
			           FROM vip_inspect_detail WHERE 1 = 1 
		              <if test="params.startDate != null">
                        <![CDATA[ AND( inspect_date >= #{params.startDate, jdbcType=DATE})  ]]>
                      </if>
                      <if test="params.endDate != null">
                        <![CDATA[ AND( inspect_date <= #{params.endDate, jdbcType=DATE})  ]]>
                      </if>
                       AND profession_id IN
                      <foreach collection="list" item="item" index="index"
				      open="(" separator="," close=")">
						#{item}
                       </foreach>
		            ) atten ON stc.op_cla_id = atten.class_id and stc.student_id = atten.student_id 
		             where stc.is_valid = 'Y' <!-- 如果学员无效 -->
		            <if test="params.opClaIds != null">
                     and stc.op_cla_id in
              <!--        (
	                 select id 
			         from vip_organizational_professional 
			         where id in -->
					  <foreach collection="params.opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                  </foreach>
			           <!--  and  FIND_IN_SET(stc.op_cla_id, getChildList(id)) > 0) -->
                    </if>
		       ) 
		        as total  
			
	</select>
		
	<select id="selectCountByStudentId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT COUNT(1) from vip_inspect_detail
		WHERE student_id = #{id, jdbcType=INTEGER}
		AND class_id=#{gradeOrgId,jdbcType=INTEGER}
		AND profession_id=#{profOrgId,jdbcType=INTEGER}
		AND is_valid = 'Y';
	</select>	
	
	<select id="getStuAttenDetail" resultType="com.moon.vip.infra.vo.attendance.AttendDetailVO">
		SELECT day(inspect_date) as date,
		 case 
		  when inspect_status = 0 THEN 'offDay' 
          when inspect_status = 1 THEN 'signDay' 
          when inspect_status = 2 THEN 'leaveDay'  
         end   as status FROM vip_inspect_detail 
		WHERE class_id =#{detailParams.classId,jdbcType=INTEGER} AND student_id = #{detailParams.stuId,jdbcType=INTEGER} 
		AND YEAR(inspect_date) = YEAR( DATE_FORMAT(#{detailParams.date, jdbcType=DATE},'%y-%m-%d'))
		AND MONTH(inspect_date) = MONTH( DATE_FORMAT(#{detailParams.date, jdbcType=DATE},'%y-%m-%d'))
	</select>	
	
	<delete id="deleteRecord" 
		parameterType="com.moon.vip.model.inspect.InspectDetail">
		DELETE
		FROM
		vip_inspect_detail
		WHERE
		profession_id =
		#{professionId,jdbcType=INTEGER} AND
		class_id =
		#{classId,jdbcType=INTEGER} AND
		student_id =
		#{studentId,jdbcType=INTEGER} AND
		inspect_date =
		#{inspectDate,jdbcType=DATE}
	</delete>
		
	<select id="getOrg" resultType="com.moon.vip.infra.vo.attendance.OrgNameVO">
	  SELECT a.id,a.name  as className ,d.proName,orgName FROM vip2.vip_organizational_professional a join(
      SELECT b.id,b.name as proName ,c.name as orgName FROM vip2.vip_organizational_professional b join 
      (SELECT id ,name  FROM vip2.vip_organizational_professional) c on  c.id = b.partent_id
      ) d  on  d.id = a.partent_id where type='cla'
	</select>
	<select id="findStudentByClassId" resultType="com.moon.vip.infra.vo.attendance.StuAttendanceVO"
		parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams">
			SELECT distinct
			    stc.student_id as stuId,
			    stc.op_cla_id as classId,
			    stp.profession_code AS stuCode,
			    stu.name AS stuName
		   FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		        and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause')
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		        and stu.is_valid = 'Y' 
		    WHERE   stc.op_cla_id = #{orgProCalId,jdbcType=INTEGER}
		    	  <if test="opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="searchKey != null and searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>  
		    order  by  stc.student_id 
		    limit #{startNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		
	</select>
	<select id="findStuByClaIdInAtdTable" resultType="com.moon.vip.infra.vo.attendance.StuAttendanceVO"
		parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams">
		  SELECT * FROM(
		  
		      SELECT distinct
			    stc.student_id as stuId,
			    stc.op_cla_id as classId,
			    stp.profession_code AS stuCode,
			    stu.name AS stuName
		     FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		        and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause') 
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		       and stu.is_valid = 'Y'  
		    WHERE   stc.op_cla_id = #{orgProCalId,jdbcType=INTEGER} and stc.is_valid = 'Y'
             <if test="opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="searchKey != null and searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>

	) AS TOTAL 
	
	 	<if test="absenceSum == null or absenceSum == 0">
				LEFT
	    </if>
	  
	   JOIN

	(
			SELECT * FROM (
			select student_id as stuId,sum(attendnum) as attendanceSum ,sum(absentnum)as
			absenceSum,sum(leavesnum) as leaveSum from (
			SELECT id,class_id,student_id,profession_id,inspect_date,
			CASE WHEN inspect_status = 1 THEN 1 ELSE 0 END attendnum,
			CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum,
			CASE WHEN inspect_status = 2 THEN 1 ELSE 0 END leavesnum
			FROM vip_inspect_detail WHERE class_id = #{orgProCalId,jdbcType = INTEGER}
			and is_valid = 'Y'
			) as total group by student_id
			)as total
			<if test="absenceSum != null">
				WHERE absenceSum >= #{absenceSum,jdbcType=INTEGER}
			</if>
		
			)
	   stuArchves on TOTAL.stuId = stuArchves.stuId
	   order by absenceSum desc
	  limit #{startNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		
	  </select> 
	  <select id="getCountStudentByClassId" parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams" resultType="java.lang.Integer">
	      SELECT COUNT(*) FROM (
		   
                SELECT distinct
			    stc.student_id as stuId,
			    stc.op_cla_id as classId,
			    stp.profession_code AS stuCode,
			    stu.name AS stuName
		     FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		        and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause') 
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		       and stu.is_valid = 'Y'  
		    WHERE   stc.op_cla_id = #{orgProCalId,jdbcType=INTEGER}
		    <if test="opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="searchKey != null and searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>  
           
       
           ) AS TOTAL
             <if test="absenceSum == null or absenceSum == 0">
				LEFT
	          </if>
              JOIN 
           
           (
           
                   SELECT * FROM (
		       select student_id as stuId,sum(attendnum) as attendanceSum ,sum(absentnum)as absenceSum,sum(leavesnum) as leaveSum from (
						   SELECT id,class_id,student_id,profession_id,inspect_date, 
						   CASE WHEN inspect_status = 1 THEN 1 ELSE 0 END attendnum,
						   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum,
						   CASE WHEN inspect_status = 2 THEN 1 ELSE 0 END leavesnum
				           FROM vip_inspect_detail WHERE class_id = #{orgProCalId,jdbcType = INTEGER}
	             ) as total group by student_id 
          )as total 	
          	<if test="absenceSum != null">
             WHERE absenceSum >= #{absenceSum,jdbcType=INTEGER}   
          	</if>
           
           ) stuArchves on TOTAL.stuId = stuArchves.stuId
	</select>
<!-- 	<select id="getCountStudentByClassId" 	parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams" resultType="java.lang.Integer">
					SELECT count(1)
		   FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		        and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause')
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		        and stu.is_valid = 'Y' 
		    WHERE   stc.op_cla_id = #{orgProCalId,jdbcType=INTEGER}
		    	  <if test="opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="searchKey != null and searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>  
	</select> -->
	<select id="getStudentAttendByStuIds" resultType="com.moon.vip.infra.vo.attendance.StuAttendanceVO">
                select student_id as stuId,sum(attendnum) as attendanceSum ,sum(absentnum)as absenceSum,sum(leavesnum) as leaveSum from (
					   SELECT id,class_id,student_id,profession_id,inspect_date, 
					   CASE WHEN inspect_status = 1 THEN 1 ELSE 0 END attendnum,
					   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum,
					   CASE WHEN inspect_status = 2 THEN 1 ELSE 0 END leavesnum
			           FROM vip_inspect_detail WHERE 1 = 1 and class_id = #{classId,jdbcType = INTEGER}
			       
                             and student_id in
					  <foreach collection="params" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id.stuId}
  		                  </foreach>
                    
                      ) as total group by student_id 
		
	</select>
		<select id="getStuArchesByStuIds" resultType="com.moon.vip.infra.vo.attendance.StuAttendanceVO">
         SELECT distinct
			    stc.student_id as stuId,
			    stc.op_cla_id as classId,
			    stp.profession_code AS stuCode,
			    stu.name AS stuName
		   FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		       <!--  and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause') -->
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		       <!--  and stu.is_valid = 'Y'  -->
		    WHERE   stc.op_cla_id = #{orgProCalId,jdbcType=INTEGER}
	        and stc.student_id in
					  <foreach collection="params" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id.stuId}
  		              </foreach>
		
		
	</select>
	
	
	<select id="getUnAttendStus" resultType="com.moon.vip.infra.vo.attendance.StuAttendanceVO"
		parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams">
		  SELECT * FROM(
	      SELECT * FROM (
		       select student_id as stuId,class_id as classId,sum(absentnum)as absenceSum from (
						   SELECT id,class_id,student_id,profession_id,inspect_date, 
						   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum
				           FROM vip_inspect_detail WHERE 
				          class_id  in
				       <foreach item="item" index="index" collection="claIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
				           
				           
				     <if test="params.startDate != null">
                        <![CDATA[ AND( inspect_date >= #{params.startDate, jdbcType=DATE})  ]]>
                      </if>
                      <if test="params.endDate != null">
                        <![CDATA[ AND( inspect_date <= #{params.endDate, jdbcType=DATE})  ]]>
                      </if>
	             ) as total group by student_id ,class_id
          )as total 	
          	<if test="params.absenceSum != null">
             WHERE absenceSum >= #{params.absenceSum,jdbcType=INTEGER}   
          	</if>
       
           ) AS TOTAL JOIN 
           
           (
                SELECT distinct
			    stc.student_id as stuId,
			    stc.op_cla_id as classId,
			    stp.profession_code AS stuCode,
			    stu.name AS stuName,
			    stu.qq as stuQy,
				stu.telephone as stuTel,
			    vop.name as className
		     FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		        and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause') 
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		       and stu.is_valid = 'Y' 
		     JOIN   (select id,name from vip_organizational_professional)  vop on  vop.id = stc.op_cla_id 
		    WHERE  1=1
             <if test="params.opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="params.opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="params.searchKey != null and params.searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{params.searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{params.searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>  
           ) stuArchves on TOTAL.stuId = stuArchves.stuId and TOTAL.classId = stuArchves.classId
            order by absenceSum desc
           limit #{params.startNumber,jdbcType=INTEGER},#{params.pageSize,jdbcType=INTEGER}
		
	  </select> 
	  	  <select id="getCountUnAttendStus" parameterType="com.moon.vip.infra.vo.attendance.AttendSercherParams" resultType="java.lang.Integer">
      		  SELECT count(1) FROM(
	        SELECT * FROM (
		       select student_id as stuId,class_id as classId ,sum(absentnum)as absenceSum from (
						   SELECT id,class_id,student_id,profession_id,inspect_date, 
						   CASE WHEN inspect_status = 0 THEN 1 ELSE 0 END absentnum
				           FROM vip_inspect_detail WHERE class_id in
				         <foreach item="item" index="index" collection="claIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
				           
				       <if test="params.startDate != null">
                        <![CDATA[ AND( inspect_date >= #{params.startDate, jdbcType=DATE})  ]]>
                      </if>
                      <if test="params.endDate != null">
                        <![CDATA[ AND( inspect_date <= #{params.endDate, jdbcType=DATE})  ]]>
                      </if>
	             ) as total group by student_id ,class_id 
          )as total 	
          	<if test="params.absenceSum != null">
             WHERE absenceSum >= #{params.absenceSum,jdbcType=INTEGER}   
          	</if>
       
           ) AS TOTAL JOIN 
           
           (
                SELECT distinct
			    stc.student_id as stuId,
			    stc.op_cla_id as classId,
			    stp.profession_code AS stuCode,
			    stu.name AS stuName,
			    stu.qq as stuQy,
				stu.telephone as stuTel
		     FROM
		    vip_student_class stc
		        JOIN
		    vip_student_professional stp ON stc.student_id = stp.student_id
		        and stp.is_valid = 'Y'
		        and stp.status not in ('drop ' , 'pause') 
		        and stc.op_pro_id = stp.op_pro_id
		        JOIN
		    vip_student_archives stu ON stc.student_id = stu.ID
		       and stu.is_valid = 'Y' 
		    WHERE  1 = 1
             <if test="params.opClaIds != null">
		        and stc.op_cla_id in
			    	    <foreach collection="params.opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
		   </if>
		  <if test="params.searchKey != null and params.searchKey!='' ">
				AND ( stu.name like CONCAT(CONCAT('%',#{params.searchKey,jdbcType
				=VARCHAR}),'%')
				OR stp.profession_code like CONCAT(CONCAT('%',#{params.searchKey,jdbcType
				=VARCHAR}),'%')
			)
		  </if>  
           ) stuArchves on TOTAL.stuId = stuArchves.stuId and TOTAL.classId = stuArchves.classId
           
	</select>
</mapper>