<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moon.vip.application.sys.OrganizationalProfessionalSqlMapper" >
  <resultMap id="BaseResultMap" type="com.moon.vip.model.sys.OrganizationalProfessional" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 23 15:44:50 CST 2015.
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="type1" property="type" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="partent_id" property="partentId" jdbcType="INTEGER" />
    <result column="parent_manage_role" property="parentManageRole" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="organizate_order" property="organizateOrder" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="is_end" property="isEnd" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_user" property="modifyUser" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="offset"  property="offset" jdbcType="INTEGER" />
    <result column="pageSize"  property="pageSize" jdbcType="INTEGER" />
    <result column="op_id"  property="opId" jdbcType="INTEGER"/>
    <result column="employee_code" property="employeeCode" jdbcType="VARCHAR"/>
    <result column="employee_code1" property="employeeCode" jdbcType="VARCHAR"/>
   
    <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
    <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
    <result column="cName" property="cName" jdbcType="VARCHAR"/>
    <result column="bName" property="bName" jdbcType="VARCHAR"/>
    <result column="eName" property="eName" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 23 15:44:50 CST 2015.
    -->
    ID, type, name, partent_id, parent_manage_role, level, organizate_order, is_valid, 
    start_date, end_date, is_end, create_time, creator, modify_time, modify_user, version
  </sql>

  <select id="selectClassId" resultType="com.moon.vip.infra.vo.attendance.ClassIdAndParentIdVO">
      SELECT
      id ,partent_id as parentId
      FROM vip_organizational_professional 
      WHERE type = 'cla' AND is_valid = 'Y' AND name= #{className,jdbcType=VARCHAR} AND
      partent_id =  (SELECT  id  FROM vip_organizational_professional   WHERE type = 'pro'  AND name= #{proName,jdbcType=VARCHAR} AND
      partent_id =  (SELECT  id  FROM vip_organizational_professional   WHERE type = 'org'  AND name= #{orgName,jdbcType=VARCHAR} AND is_valid = 'Y' ) AND is_valid = 'Y')
  </select>
    <!-- 根据事业部ID查询集群 -->
    <select id="selectOrgById"
    parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO"
    resultType="java.lang.String">
  SELECT br.name from vip_organizational_professional br
  JOIN (SELECT id,`name`, partent_id as pId FROM vip_organizational_professional ) a
  on br.id=a.pId
  where 
  a.id=#{id,jdbcType=INTEGER}
  and 
  type="org" 
  and is_valid='Y'
    </select>
  	<!-- 查询专业框架树的信息 -->
	<select id="selectInfoById" resultType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO" 
		parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO">
		select id,name,partent_id as pId,parent_manage_role as parentManageRole
		from vip_organizational_professional where  is_valid='Y'
		and find_in_set(id,
		getChildList(#{id, jdbcType = INTEGER}))
		and
		type ='org' order
		by
		organizate_order DESC
	</select>
  <!--展示全部班级数据  -->
  <select id="selectAllClass" 
  parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO"
  resultType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO">
SELECT c.id,br.name AS brName,a.name AS aName,b.name AS bName ,c.name AS cName, eb.nick_name AS dName,veb.nick_name AS eName  FROM  vip_organizational_professional  br 
  left JOIN (SELECT id,`name`, partent_id as pId FROM vip_organizational_professional ) a
   ON br.id=a.pId
  left JOIN (SELECT id,`name`,partent_id as pId FROM vip_organizational_professional ) b
    ON a.id =b.pId
  left JOIN (SELECT id,`name`,partent_id as pId,is_valid FROM vip_organizational_professional ) c
	ON b.id =c.pId
  left JOIN (SELECT op_id,type,employee_code FROM vip_OP_manager ) om
	ON c.id =om.op_id and om.type='teacher'
  left JOIN (SELECT nick_name,employee_code FROM vip_employee_base) eb
	ON om.employee_code =eb.employee_code
  left JOIN (SELECT op_id,type,employee_code FROM vip_OP_manager ) vom
	ON c.id =vom.op_id and vom.type='adviser'
  left JOIN (SELECT nick_name,employee_code FROM vip_employee_base) veb
	ON vom.employee_code =veb.employee_code
  WHERE a.Id=#{id,jdbcType=INTEGER}
  AND c.is_valid='Y'
  ORDER BY create_time DESC limit #{offset,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER};
  </select>
  <!-- 根据事业部找所有专业 -->
  <select id="selectAllMar"
   parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO"
   resultType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO">
   SELECT b.name AS bName from vip_organizational_professional v
  JOIN (SELECT id,`name`, partent_id as pId FROM vip_organizational_professional ) a
  on v.partent_id=a.id
  JOIN (SELECT id,`name`, partent_id as pId FROM vip_organizational_professional ) b
  on a.id=b.pid
  where 
  a.id=#{id,jdbcType=INTEGER}
  and 
  type="pro" 
  and is_valid='Y';
  </select>
  <!-- 获取全部班级的总数 -->
  <select id="selectClaCount"  
   parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO"
   resultType="java.lang.Integer">
  SELECT COUNT(*) from vip_organizational_professional v
  JOIN (SELECT id,`name`, partent_id as pId FROM vip_organizational_professional ) a
  on   v.partent_id=a.id
  JOIN (SELECT id,`name`, partent_id as pId FROM vip_organizational_professional ) b
  on a.pId=b.id
  where 
  b.id=#{id,jdbcType=INTEGER}
  and 
  type="cla" 
  and is_valid='Y';
 
  </select>

   <!-- 添加班级信息 -->
 <insert id="addClass" useGeneratedKeys="true" keyProperty="id" parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO">
   INSERT INTO vip_organizational_professional(type,name,partent_id,parent_manage_role, level,organizate_order,is_valid,start_date,end_date,create_time,creator,modify_time,version,is_end)
   VALUES(#{type,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{pId,jdbcType=INTEGER},#{parentManageRole,jdbcType=INTEGER},#{level,jdbcType=INTEGER},
          #{organizateOrder,jdbcType=INTEGER}, #{isValid,jdbcType=INTEGER},#{startDate,jdbcType=TIMESTAMP},#{endDate,jdbcType=TIMESTAMP},
          #{createTime,jdbcType=TIMESTAMP},#{creator,jdbcType=VARCHAR},#{modifyTime,jdbcType=TIMESTAMP},#{version,jdbcType=INTEGER},#{isEnd,jdbcType=VARCHAR});                                             
  </insert>
  <insert id="addTeacher" parameterType="com.moon.vip.infra.vo.sys.TeacherVO">
  INSERT INTO vip_OP_manager(op_id, type,employee_code,create_time,creator)
  VALUES(#{opId,jdbcType=INTEGER},#{type,jdbcType=VARCHAR},#{employeeCode,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{creator,jdbcType=VARCHAR}),
        (#{opId,jdbcType=INTEGER},#{type1,jdbcType=VARCHAR},#{employeeCode1,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{creator,jdbcType=VARCHAR});
  </insert>

  
  <!-- 根据专业名称查询班级PID --> 
  <select id="selectCourseNameByID" parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO" 
  resultType="java.lang.Integer">
   SELECT
		id
	FROM
		vip_organizational_professional
	WHERE
		type = 'pro'
	AND name = #{bName, jdbcType=VARCHAR}
	AND is_valid = 'Y';
  </select> 
   
  <!-- 根据班主任名字获取employee_code -->
  <select id="selectAdiser" resultType="java.lang.String" parameterType="com.moon.vip.infra.vo.sys.TeacherVO">
   select 
   employee_code
   FROM
   vip_employee_base
   where 
   nick_name=#{nickName,jdbcType=VARCHAR};
  </select>
  
  <select id="selectTecher" resultType="com.moon.vip.infra.vo.sys.EmployeeBaseVO">
  SELECT
	veb.nick_name as nickName
  FROM
  vip_employee_base veb
  JOIN vip_OP_manager vom ON veb.employee_code=vom.employee_code
  where vom.type='teacher';
  </select>
  <select id="selectAdviser" resultType="com.moon.vip.infra.vo.sys.EmployeeBaseVO">
  SELECT
	veb.nick_name as nickName
  FROM
  vip_employee_base veb
  JOIN vip_OP_manager vom ON veb.employee_code=vom.employee_code
  where vom.type='adviser';
  </select>
  
  <!-- 删除班级 -->
  <delete id="delClass" 
  parameterType="java.lang.Integer">
  DELETE FROM vip_organizational_professional WHERE ID=#{id,jdbcType=INTEGER};
  </delete>
  <!-- 结课 -->
  <update id="updateIsValid" 
  parameterType="java.lang.Integer">
  UPDATE  vip_organizational_professional SET is_valid='N'
  where 
  type='cla' 
  and
  id=#{id,jdbcType=INTEGER};
  </update>
  <!-- 更新 -->
  <update id="updateClass" parameterType="com.moon.vip.infra.vo.sys.OrganizationalProfessionalVO">
   UPDATE vip_organizational_professional SET name=#{name,jdbcType=VARCHAR},start_date=#{startDate,jdbcType=TIMESTAMP},
   end_date=#{endDate,jdbcType=TIMESTAMP} WHERE type='cla' AND ID =#{ID,jdbcType=INTEGER};
  </update>
  
<!--     <select id="findChildOrg" resultMap="BaseResultMap">
      SELECT
      *
      FROM vip_organizational_professional a
      WHERE partent_id= #{parentId,jdbcType=INTEGER}
      AND is_valid = 'Y'
  	  <if test="opClaIds != null">
  	   and 
       exists(
         select id from vip_organizational_professional c where exists (
         select id 
	    from vip_organizational_professional b
	    where id in
   	    <foreach collection="opClaIds" item="Id" index="index"
      					 open="(" close=")" separator=","> 
      					  #{Id}
        </foreach>
         and FIND_IN_SET(c.id, getChildList(b.id)) > 0 )
	     and  FIND_IN_SET(a.id, getParentList(c.id)) > 0
	     )
    </if>
  </select> -->
  
<!--       <select id="findChildOrg" resultMap="BaseResultMap">
      SELECT
      *
      FROM vip_organizational_professional a
      WHERE partent_id= #{parentId,jdbcType=INTEGER}
      AND is_valid = 'Y' 
  	  <if test="opClaIds != null">
  	   and  exists 
        (

		 select null from vip_organizational_professional b where
           FIND_IN_SET(b.id, getChildList(a.id)) > 0
		   and
         exists(
         select id 
	     from vip_organizational_professional 
	     where id in
	      <foreach collection="opClaIds" item="Id" index="index"
      					 open="(" close=")" separator=","> 
      					  #{Id}
        </foreach>
	     and  FIND_IN_SET(b.id, getChildList(id)) > 0)  
      )
    </if>
  </select> -->
  
   <select id="findChildOrg" resultMap="BaseResultMap">
      SELECT 
      distinct(a.id),a.name
      FROM vip_organizational_professional a
     
      JOIN vip_organizational_professional t ON (find_in_set(t.id,getChildList(a.id)) > 0 AND t.type='cla')
      WHERE a.partent_id= #{parentId,jdbcType=INTEGER}
      AND a.is_valid = 'Y' 
  	  <if test="opClaIds != null">
  	   and  t.id in 
        
    <!--     SELECT id 
	    FROM vip_organizational_professional 
	    WHERE id in -->
	      <foreach collection="opClaIds" item="Id" index="index"
      					 open="(" close=")" separator=","> 
      					  #{Id}
        </foreach>
	   <!--   and  FIND_IN_SET(t.id, getChildList(id)) > 0  -->
      
    </if>
  </select>
  
  
    <select id="getAllProId" resultType="java.lang.Integer">
     SELECT id FROM (
       SELECT * FROM vip2.vip_organizational_professional where id = #{parentId,jdbcType=INTEGER} union
       SELECT * FROM vip2.vip_organizational_professional where partent_id = #{parentId,jdbcType=INTEGER} union 
       SELECT * FROM vip_organizational_professional  where partent_id in (SELECT id FROM vip2.vip_organizational_professional where partent_id = #{parentId,jdbcType=INTEGER})
    ) as total where type ='pro' and is_valid = 'Y' 
    order by ID 
  </select>
  
   <select id="getStuCode" resultType="java.lang.String">
    SELECT b.profession_code 
    FROM vip_student_class a 
    JOIN vip_student_professional  b
    ON a.student_id = b.student_id and a.op_pro_id = b.op_pro_id 
    WHERE a.op_cla_id= #{classId,jdbcType = INTEGER} and a.is_valid ='Y';
  </select>
  
  
  
  <!-- 根据专业id获取其班级id 大枫-->
  <select id="selectOrgInfoByParentId" resultType="com.moon.vip.infra.vo.sys.OrgProfessionalInfoVO">
	SELECT id,name from vip_organizational_professional
	WHERE partent_id = #{parantId, jdbcType=INTEGER}
	AND is_valid = 'Y'
	AND is_end = 'N'
	ORDER BY  organizate_order ASC;
  </select>
  
  <!-- 根据名称获取专业的id  by大枫-->
   <select id="selectProfByName" resultType="java.lang.Integer" parameterType="java.lang.String">
	SELECT
		id
	FROM
		vip_organizational_professional
	WHERE
		type = 'pro'
	AND NAME = #{name, jdbcType=VARCHAR}
	AND is_valid = 'Y';
  </select>  
  <select id="getChildList" resultType="java.lang.String">
  	SELECT getChildList(#{orgId, jdbcType=INTEGER});
  </select>
  
    <!--展示全部班级数据   BY CHENHAI-->
  <select id="getClassInfo" 
  parameterType="com.moon.vip.infra.vo.sys.classSearchParamsVO"
  resultType="com.moon.vip.infra.vo.sys.ClassInfoVO">
		SELECT 
		    a.id,
			a.name,
			a.is_end isEnd,
			a.start_date as startDate,
			a.end_date as endDate,
			b.id as proID,
			b.name as proName,
			c.id as orgId ,
			c.name as orgName,
			d.id as cluId,
			d.name as cluName,
			cmg.name as teachName,
			cmg.nick_name as teachNickName,
			adv.name as advName,
			adv.nick_name as advNickName
		FROM vip2.vip_organizational_professional a 
		JOIN (SELECT id,name,is_valid,partent_id FROM vip2.vip_organizational_professional) b on a.partent_id = b.id and b.is_valid ='Y'
		JOIN (SELECT id,name,is_valid,partent_id FROM vip2.vip_organizational_professional) c on b.partent_id = c.id and c.is_valid ='Y'
		JOIN (SELECT id,name,is_valid,partent_id FROM vip2.vip_organizational_professional) d on c.partent_id = d.id and d.is_valid ='Y'
        LEFT JOIN (SELECT a.id,a.op_id,a.employee_code,b.name,b.nick_name,a.type FROM vip_OP_manager a
				           JOIN vip_employee_base b
				            ON a.employee_code = b.employee_code
				            WHERE a.type = 'teacher') cmg 
        ON (a.id = cmg.op_id)
        LEFT JOIN (SELECT a.id,a.op_id,a.employee_code,b.name,b.nick_name,a.type FROM vip_OP_manager a
				           JOIN vip_employee_base b 
				           ON a.employee_code = b.employee_code
				            WHERE a.type = 'adviser') adv 
        ON (a.id = adv.op_id) 
   WHERE a.type = 'cla' and a.is_valid = 'Y' 
    <if test="opClaIds != null">
		        and a.id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
    </if>
    <if test="orgId != null">
		AND  c.id = #{orgId,jdbcType=INTEGER}
	</if>
   	<if test="searchKey != null and searchKey!='' ">
		AND ( a.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		OR b.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		OR c.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		<!-- OR d.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%') -->
		OR cmg.nick_name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		OR adv.nick_name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		)
	</if>
     ORDER BY create_time DESC 
     limit #{startNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
    <select id="getCountClassInfo" 
  parameterType="com.moon.vip.infra.vo.sys.classSearchParamsVO"
  resultType="java.lang.Integer">
		SELECT  COUNT(1)
		FROM vip2.vip_organizational_professional a 
		JOIN (SELECT id,name,is_valid,partent_id FROM vip2.vip_organizational_professional) b on a.partent_id = b.id and b.is_valid ='Y'
		JOIN (SELECT id,name,is_valid,partent_id FROM vip2.vip_organizational_professional) c on b.partent_id = c.id and c.is_valid ='Y'
		JOIN (SELECT id,name,is_valid,partent_id FROM vip2.vip_organizational_professional) d on c.partent_id = d.id and d.is_valid ='Y'
        LEFT JOIN (SELECT a.id,a.op_id,a.employee_code,b.name,b.nick_name,a.type FROM vip_OP_manager a
				           JOIN vip_employee_base b
				            ON a.employee_code = b.employee_code
				            WHERE a.type = 'teacher') cmg 
        ON (a.id = cmg.op_id)
        LEFT JOIN (SELECT a.id,a.op_id,a.employee_code,b.name,b.nick_name,a.type FROM vip_OP_manager a
				           JOIN vip_employee_base b 
				           ON a.employee_code = b.employee_code
				            WHERE a.type = 'adviser') adv 
        ON (a.id = adv.op_id) 
   WHERE a.type = 'cla' and a.is_valid = 'Y' 
    <if test="opClaIds != null">
		        and a.id in
			    	    <foreach collection="opClaIds" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
    </if>
    <if test="orgId != null">
		AND  c.id = #{orgId,jdbcType=INTEGER}
	
	</if>
   	<if test="searchKey != null and searchKey!='' ">
		AND ( a.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		OR b.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		OR c.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
	<!-- 	OR d.name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%') -->
		OR cmg.nick_name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		OR adv.nick_name like CONCAT(CONCAT('%',#{searchKey,jdbcType
		=VARCHAR}),'%')
		)
	</if>
  </select>
    <select id="getAllProById" resultMap="BaseResultMap">
	SELECT * from vip_organizational_professional
	WHERE partent_id = #{id,
	jdbcType=INTEGER}
	AND is_valid = 'Y' and id in
	<foreach collection="params" item="Id" index="index" open="("
		close=")" separator=",">
		#{Id}
	</foreach>
	ORDER BY  organizate_order ASC;
  </select>
    <select id="checkRepeat" resultType="java.lang.Integer">
	SELECT count(1) from vip_organizational_professional
	WHERE partent_id = #{id, jdbcType=INTEGER}
	AND name = #{name,jdbcType = VARCHAR}
	AND TYPE = 'cla' and  is_valid = 'Y'
	<if test="claId != null">
	AND ID != #{claId,jdbcType =INTEGER}
	</if>
  </select>
  
  <select id="getAllOrgInfo" resultType="com.moon.vip.infra.vo.sys.orgManage.OrgBaseVO">
      select id,name,partent_id as pId
        from vip_organizational_professional
       where is_valid = 'Y'
	  ORDER BY  pid,id;
  </select>
  
  <select id="selectTopNodeId">
  	select id from vip_organizational_professional where partent_id is null
  </select>
  
  <select id="findWhereOrgInCla" resultType="java.lang.Integer">
      SELECT op_cla_id FROM vip_student_class WHERE ID IN
			    	    <foreach collection="params" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
  </select>
    <select id="findWhereOrgInPro" resultType="java.lang.Integer">
      SELECT op_pro_id FROM vip_student_professional WHERE ID IN
			    	    <foreach collection="params" item="Id" index="index"
          					 open="(" close=")" separator=","> 
          					  #{Id}
  		                 </foreach>
  </select>
  
   <select id="findWhereOrgInStu" resultType="java.lang.Integer">
      SELECT op_pro_id FROM vip_student_professional WHERE 
          student_id =#{params,jdbcType = VARCHAR}
  </select>
   <select id="findWhereOrgInQus" resultType="java.lang.Integer">
      SELECT pro_id FROM vip_questionnaire WHERE 
          id =#{params,jdbcType = VARCHAR}
  </select>
  <select id="findWhereOrgInItv" resultType="java.lang.Integer">
      SELECT op_pro_id FROM vip_interviews WHERE 
          id =#{params,jdbcType = VARCHAR}
  </select>
    <select id="findWhereOrgInProAth" resultType="java.lang.Integer">
       SELECT op_pro_id FROM vip_student_professional WHERE id = ( SELECT sp_id FROM vip_student_professional_attach WHERE 
          id =#{params,jdbcType = VARCHAR}
          )
  </select>
</mapper>