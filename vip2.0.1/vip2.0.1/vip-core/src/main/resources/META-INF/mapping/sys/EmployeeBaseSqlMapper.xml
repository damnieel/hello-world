<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moon.vip.application.sys.EmployeeBaseSqlMapper" >
  <resultMap id="BaseResultMap" type="com.moon.vip.model.sys.EmployeeBase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 23 15:44:50 CST 2015.
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="employee_code" property="employeeCode" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
    <result column="organization_level" property="organizationLevel" jdbcType="VARCHAR" />
    <result column="level_type" property="levelType" jdbcType="VARCHAR" />
    <result column="level_code" property="levelCode" jdbcType="VARCHAR" />
    <result column="superior" property="superior" jdbcType="INTEGER" />
    <result column="superior_role" property="superiorRole" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_subbranch" property="bankSubbranch" jdbcType="VARCHAR" />
    <result column="bank_address" property="bankAddress" jdbcType="VARCHAR" />
    <result column="bank_code_number" property="bankCodeNumber" jdbcType="VARCHAR" />
    <result column="try_salary" property="trySalary" jdbcType="INTEGER" />
    <result column="formal_salary" property="formalSalary" jdbcType="INTEGER" />
    <result column="current_salary" property="currentSalary" jdbcType="INTEGER" />
    <result column="entry_time" property="entryTime" jdbcType="DATE" />
    <result column="leave_time" property="leaveTime" jdbcType="DATE" />
    <result column="effective_time" property="effectiveTime" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="initial_post" property="initialPost" jdbcType="INTEGER" />
    <result column="initial_org" property="initialOrg" jdbcType="INTEGER" />
    <result column="account_status" property="accountStatus" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 23 15:44:50 CST 2015.
    -->
    ID, employee_code, password, name, nick_name, organization_id, organization_level, 
    level_type, level_code, superior, superior_role, bank_code, bank_subbranch, bank_address, 
    bank_code_number, try_salary, formal_salary, current_salary, entry_time, leave_time, 
    effective_time, status, initial_post, initial_org, account_status, create_time, creator, 
    update_time, updator, version
  </sql>
  <select id="selectByloginInfo" resultType="java.lang.Integer" parameterType="com.moon.vip.infra.vo.LoginInfoVO">
  	SELECT
  		count(1)
	FROM
		vip_employee_base
	WHERE
		password = #{password,jdbcType=VARCHAR} 
	AND
		employee_code = #{employeeCode, jdbcType=VARCHAR} 
  </select>
  <select id="findEmployeeByCodeAndPwd"  parameterType="com.moon.vip.infra.vo.LoginInfoVO" 
  	resultType="com.moon.vip.infra.vo.EmployeeLoginVO">
	SELECT
		base.ID AS id,
		base.employee_code AS employeeCode,
		base.NAME,
		base.nick_name AS nickName,
		empRole.role_id AS roleId,
		role.`code` as roleCode, 
		role.name as roleName
	FROM
		vip_employee_base base,
		vip_employee_role empRole,
		vip_role role
	WHERE
		password = #{password,jdbcType=VARCHAR}
	AND
		employee_code = #{employeeCode, jdbcType=VARCHAR} 
	AND base.ID = empRole.employee_id
	AND base.account_status = 'using'
	AND role.is_valid = 'Y'
	AND role.ID = empRole.role_id ;
  </select>
  
    <select id="findEmployeeBySSOCodeAndPwd"  parameterType="com.moon.vip.infra.vo.LoginInfoVO" 
  	resultType="com.moon.vip.infra.vo.EmployeeLoginVO">
	SELECT
		base.ID AS id,
		base.employee_code AS employeeCode,
		base.NAME,
		base.nick_name AS nickName,
		empRole.role_id AS roleId,
		role.`code` as roleCode, 
		role.name as roleName
	FROM
		vip_employee_base base,
		vip_employee_role empRole,
		vip_role role
	WHERE
	employee_code = #{employeeCode, jdbcType=VARCHAR} 
	AND base.ID = empRole.employee_id
	AND base.account_status = 'using'
	AND role.is_valid = 'Y'
	AND role.ID = empRole.role_id ;
  </select>
  
  
    <select id="findEmployeeByAccount"  parameterType="java.lang.String" 
   	resultType="com.moon.client.vo.UserInfoVO">
	SELECT
	employee_code as userAccount,
	password,
	name as name,
	nick_name as nickName,
	organization_id as organizationId,
	organization_level as organizationLevel,
	level_type as levelType,
	level_code as levelCode,
	status

	FROM
	vip_employee_base
	WHERE
	employee_code = #{account, jdbcType=VARCHAR} 
  </select>
  
  <select id="checkUniqueByCode"   resultType="java.lang.Integer">
	SELECT
	  count(*)
	FROM
	vip_employee_base
	WHERE
	employee_code = #{account, jdbcType=VARCHAR} 
	<!-- or nick_name = #{nickName,jdbcType=VARCHAR} -->
  </select>
    <select id="checkUniqueByNickName"   resultType="java.lang.Integer">
	SELECT
	  count(*)
	FROM
	vip_employee_base
	WHERE
	<!-- employee_code = #{account, jdbcType=VARCHAR}  -->
	nick_name = #{nickName,jdbcType=VARCHAR}
  </select>
  <insert id="addUser" parameterType="com.moon.client.vo.UserInfoVO">
      insert into vip_employee_base
    <trim prefix="(" suffix=")" suffixOverrides="," >
     
      <if test="userAccount != null" >
        employee_code,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="organizationLevel != null" >
        organization_level,
      </if>
      <if test="levelType != null" >
        level_type,
      </if>
      <if test="levelCode != null" >
        level_code,
      </if>
      <if test="status != null" >
        status,
      </if>
        create_time,
     
      <if test="creator != null" >
        creator,
      </if>
    
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
   
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationLevel != null" >
        #{organizationLevel,jdbcType=VARCHAR},
      </if>
      <if test="levelType != null" >
        #{levelType,jdbcType=VARCHAR},
      </if>
      <if test="levelCode != null" >
        #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
         now(),
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  
  <update id="updateEmpByCode" parameterType="com.moon.client.vo.UserInfoVO" >
    update vip_employee_base
    <set >
      <if test="name != null" >
         name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name =  #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null" >
        organization_id=  #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationLevel != null" >
       organization_level = #{organizationLevel,jdbcType=VARCHAR},
      </if>
      <if test="levelType != null" >
         level_type = #{levelType,jdbcType=VARCHAR},
      </if>
      <if test="levelCode != null" >
        level_code = #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
        update_time = now(),
      <if test="creator != null" >
         creator =  #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where employee_code =    #{userAccount,jdbcType=VARCHAR}
  </update>
  
  <!-- 密码修改
  	  日期：2015年12月24日
  	  @author：向新
   -->
   <update id="updatePasswordById" parameterType="com.moon.vip.infra.vo.sys.EmployeePasswordVO">
	update vip_employee_base base
	set base.password=#{newPwd,jdbcType=VARCHAR}
	where base.employee_code=#{employeeCode,jdbcType=VARCHAR} and 
	base.password=#{oldPwd,jdbcType=VARCHAR}
   </update>
   
     <select id="getClassMag"  parameterType="java.lang.String" 
  	 resultType="com.moon.vip.infra.vo.sys.ClassManagerVO">
     SELECT 
	     b.employee_code as empCode,
	    <!--  b.name, -->
	     b.nick_name  as nickName
   <!--   role.name as roleName  -->
     FROM  vip2.vip_employee_base b  
     JOIN vip_employee_role r ON b.id = r.employee_id 
     JOIN vip_role role ON r.role_id = role.id 
     WHERE role.description = #{type ,jdbcType = VARCHAR}
     <if test="key != null and key !='' ">
					AND ( b.name like CONCAT(CONCAT('%',#{key,jdbcType
					=VARCHAR}),'%')
					OR b.nick_name like CONCAT(CONCAT('%',#{key,jdbcType
					=VARCHAR}),'%')
					OR b.employee_code like CONCAT(CONCAT('%',#{key,jdbcType
					=VARCHAR}),'%')
					)
	</if>
     
  </select>
  
  
  

</mapper>