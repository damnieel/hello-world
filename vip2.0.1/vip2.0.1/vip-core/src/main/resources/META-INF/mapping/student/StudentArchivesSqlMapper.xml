<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moon.vip.application.student.StudentArchivesSqlMapper" >
  <!-- 搜索模块的sql -->
 	<sql id="searchSql">
	    <if test="existClass == true">
	    	AND	class.op_cla_id in
				<foreach collection="opClaIds" item="Id" index="index"
         					 open="(" close=")" separator=","> 
         		  #{Id}	
 		        </foreach>
 		    
		 	<if test="searchOpClaIds != null" >
				AND class.op_cla_id in
				<foreach collection="searchOpClaIds" item="Id" index="index"
         					 open="(" close=")" separator=","> 
         		  #{Id}	
 		        </foreach>
				
		    </if>
		</if>
	    <if test="existClass == false">	   		
 			AND	prof.op_pro_id in
				<foreach collection="opClaIds" item="Id" index="index"
          				 open="(" close=")" separator=","> 
          		  #{Id}	
  		        </foreach>
  		    
		 	<if test="searchOpClaIds != null" >
				AND prof.op_pro_id in
				<foreach collection="searchOpClaIds" item="Id" index="index"
         					 open="(" close=")" separator=","> 
         		  #{Id}	
 		        </foreach>
				
		    </if>
		</if>
	 	<if test="keyWord != null" >
			AND (
				prof.profession_code like CONCAT('%', #{keyWord , jdbcType=VARCHAR}, '%')
				OR arch.NAME like CONCAT('%', #{keyWord , jdbcType=VARCHAR}, '%')
				OR arch.telephone like CONCAT('%', #{keyWord , jdbcType=VARCHAR}, '%')
				OR arch.QQ like CONCAT('%', #{keyWord , jdbcType=VARCHAR}, '%')
			)
	    </if>
 	</sql>
 	  
  <!-- 展示所有学员信息列表 -->
  <select id="selectAllStudent" resultType="com.moon.vip.infra.vo.student.StudentVO">
     SELECT a.ID AS id,a.`name` AS stuName,
	a.telephone AS telephone,a.QQ AS QQ
	FROM vip_student_archives a
	<where> 
	EXISTS(
           SELECT null 
             FROM vip_student_professional p
		    WHERE p.student_id =a.ID  AND p.is_valid = 'Y'
			  AND p.op_pro_id in 
			<foreach collection="opClaIds" item="Id" index="index"
		       				 open="(" close=")" separator=","> 
		    	  #{Id}	
			</foreach>
	 	<if test="searchOpClaIds != null" >
			AND p.op_pro_id in
			<foreach collection="searchOpClaIds" item="Id" index="index"
	     					 open="(" close=")" separator=","> 
	     	  #{Id}	
	       </foreach>
	    </if>
    )
	 <if test="keyWord !=null and keyWord !='' ">
	    AND (a.`name` like CONCAT(CONCAT('%',#{keyWord}),'%')
	     OR  a.telephone like CONCAT(CONCAT('%',#{keyWord}),'%')
	     OR  a.QQ like CONCAT(CONCAT('%',#{keyWord}),'%'))
	 </if>
	
	</where>
	ORDER BY a.ID DESC
	LIMIT #{offset},#{pageSize};
  </select> 
  
  <!-- 查询是否有欠款的课程专业 -->
  <select id="selectIsRefund" resultType="java.lang.Integer">
    SELECT COUNT(arrears) 
    FROM vip_student_archives  a, vip_student_professional p
    WHERE 
    a.ID =p.student_id AND a.ID =#{id} AND arrears >0;
  </select>
  
  <!-- 查询总数 -->
  <select id="selectAllStudentCount" resultType="java.lang.Integer" parameterType="com.moon.vip.infra.vo.student.StudentVO">
   SELECT COUNT(*)
	FROM vip_student_archives a
	<where> 
	EXISTS(
           SELECT null 
             FROM vip_student_professional p
		    WHERE p.student_id =a.ID AND p.is_valid = 'Y'
			  AND p.op_pro_id in 
			<foreach collection="opClaIds" item="Id" index="index"
		       				 open="(" close=")" separator=","> 
		    	  #{Id}	
			</foreach>
	 	<if test="searchOpClaIds != null" >
			AND p.op_pro_id in
			<foreach collection="searchOpClaIds" item="Id" index="index"
	     					 open="(" close=")" separator=","> 
	     	  #{Id}	
	       </foreach>
	    </if>
    )
	 <if test="keyWord !=null and keyWord !='' ">
	    AND (a.`name` like CONCAT(CONCAT('%',#{keyWord}),'%')
	     OR  a.telephone like CONCAT(CONCAT('%',#{keyWord}),'%')
	     OR  a.QQ like CONCAT(CONCAT('%',#{keyWord}),'%'))
	 </if>
	</where>
  </select>
  
  <!-- 根据学员id查看个人信息详情 -->
   <select id="selectStuDetail" resultType="com.moon.vip.infra.vo.student.StudentVO">
    SELECT 
    ID AS id, code_no AS codeNo,`name` AS stuName,name_spell AS nameSpell,stu_picture_url AS stuPictureUrl,
	birthday AS birthday,sex AS sex,telephone AS telephone,email AS email,postal_code AS postalCode,
	QQ AS QQ,YY AS YY,id_card AS idCard,card_front_address AS cardFrontAddress,
	card_reverse_address AS cardReverseAddress,education_background AS educationBackgroundKey,
	emergency_person AS emergencyPerson,emergency_telephone AS emergencyTelephone,
	contrat_relationships_code AS contratRelationshipsCode,note AS note, is_valid AS isValid,
	component_code AS componentCode,occupation_code AS occupationCodeKey, school AS school,
	native_place AS nativePlace,address AS address,hobbies AS hobbies,
	student_resources AS studentResources,other_resources AS otherResources,
	cost_resources AS costResources,create_time AS createTime,
	creator AS creator,modify_time AS modifyTime,modify_user AS modifyUser
	FROM vip_student_archives WHERE ID =#{id};  
  </select> 
  
  <!-- 根据学员id查询专业详情 -->
  <select id="selectCourseDetail" resultType="com.moon.vip.infra.vo.student.CourseVO" parameterType="com.moon.vip.infra.vo.student.CourseVO">
    SELECT 
    p.ID AS pId, p.profession_code AS professionCode,p.op_pro_id AS opProId,p.enter_date AS enterDate,
    p.amount_payable AS amountPayable,p.pay_method AS payMethodKey,p.payment AS payment,
	p.`status` AS statues,p.change_time AS changeTime,p.change_reason AS changeReason,
	p.arrears AS arrears,p.is_refund AS isRefund,p.refund_monetary AS refundMonetary,p.student_id AS studentId,
	p.refund_reason AS refundReasonKey,p.remark AS remark,o.`name` AS courseName,p.is_valid AS isValid
	FROM vip_student_archives a,vip_student_professional p,vip_organizational_professional o
	WHERE  a.ID =p.student_id AND p.op_pro_id = o.ID AND a.ID =#{studentId} AND p.is_valid ='Y'
	AND p.op_pro_id in 
			<foreach collection="opClaIds" item="id" index="index"
		       				 open="(" close=")" separator=","> 
		    	  #{id}	
			</foreach>
	ORDER BY p.enter_date DESC;
  </select>
  
  <!-- 删除专业信息 -->
  <delete id="deleteCourse" parameterType="java.lang.Integer">
     UPDATE vip_student_professional SET is_valid ='N' WHERE ID =#{pId};
  </delete>
  
  <!-- 从码表获取下拉值（用于查看学员学历详情） -->
  <select id="selectByDegree" resultType="com.moon.vip.infra.vo.student.StudentVO">
    SELECT code_value AS educationBackgroundValue,code_key AS educationBackgroundKey 
	FROM vip_code_table 
	WHERE code_key =#{educationBackgroundKey} AND type='degree';	
  </select>
  
  <!-- 从码表获取下拉值（用于查看学员职业详情） -->
  <select id="selectByProfessional" resultType="com.moon.vip.infra.vo.student.StudentVO">
    SELECT code_value AS occupationCodeValue,code_key AS occupationCodeKey 
	FROM vip_code_table 
	WHERE code_key = #{occupationCodeKey} AND type='professional';	
  </select>
  
  <!-- 从码表获取下拉值（用于查看学员专业退费详情） -->
  <select id="selectByRefundReason" resultType="com.moon.vip.infra.vo.student.CourseVO">
    SELECT code_value AS refundReasonVlaue,code_key AS refundReasonKey 
	FROM vip_code_table 
	WHERE code_key=#{refundReason} AND type='refund_reason'; 
  </select>
  
  <!-- 从码表获取下拉值（用于查看学员专业支付详情） -->
  <select id="selectByPayment" resultType="com.moon.vip.infra.vo.student.CourseVO">
    SELECT code_value AS payMethodValue,code_key AS payMethodKey 
	FROM vip_code_table 
	WHERE code_key =#{payment} AND type = 'payment'; 
  </select>
  
  <!-- 查询学员编号最大值 -->
  <select id="selectStudentCodeMax" resultType="com.moon.vip.infra.vo.student.StudentCodeVO" >
	SELECT id AS id,student_code_time AS studentCodeTime,student_code_number AS studentCodeNumber
	FROM vip_sequence 
	ORDER BY student_code_time DESC LIMIT 0,1;
  </select>
  
  <!-- 修改学员编号和专业编号最大值 -->
  <update id="updateStudentCodeMax" parameterType="com.moon.vip.infra.vo.student.StudentCodeVO">
     UPDATE vip_sequence
       <set>
            <if test="studentCodeNumber !=null">
                student_code_number = #{studentCodeNumber,jdbcType=INTEGER},
            </if>
            <if test="studentCodeTime != null">
                student_code_time = #{studentCodeTime,jdbcType=INTEGER}
            </if>
       </set> 
     WHERE id=#{id,jdbcType=INTEGER};
  </update>
  
  <!-- 添加学员编号和专业编号 -->
  <insert id="insertStudentCodeMax" parameterType="com.moon.vip.infra.vo.student.StudentCodeVO">
      INSERT INTO vip_sequence
      <trim prefix="(" suffix=")" suffixOverrides="," >
         <if test="id != null">
            id,
         </if>
         <if test="studentCodeTime != null">
           student_code_time,
         </if>
         <if test="studentCodeNumber !=null">
           student_code_number
         </if>
      </trim>
     <trim prefix="values (" suffix=")" suffixOverrides="," >
	     <if test="id != null">
	        #{id},
	     </if>
         <if test="studentCodeTime != null">
           #{studentCodeTime,jdbcType=DATE},
         </if>
         <if test="studentCodeNumber !=null">
           #{studentCodeNumber,jdbcType=INTEGER}
         </if>
     </trim>
  </insert>
  
  <!-- 添加学员信息表 -->
   <insert id="insertStuArchives" parameterType="com.moon.vip.infra.vo.student.StudentVO" >
    insert into vip_student_archives
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id!= null" >
        ID,
      </if>
      <if test="codeNo != null" >
        code_no,
      </if>
      <if test="stuName != null" >
        name,
      </if>
      <if test="nameSpell != null" >
        name_spell,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="stuPictureUrl != null" >
        stu_picture_url,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="postalCode != null" >
        postal_code,
      </if>
      <if test="QQ != null" >
        QQ,
      </if>
      <if test="YY != null" >
        YY,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="cardFrontAddress != null" >
        card_front_address,
      </if>
      <if test="cardReverseAddress != null" >
        card_reverse_address,
      </if>
      <if test="educationBackgroundKey != null" >
        education_background,
      </if>
      <if test="emergencyPerson != null" >
        emergency_person,
      </if>
      <if test="contratRelationshipsCode != null" >
        contrat_relationships_code,
      </if>
      <if test="emergencyTelephone != null" >
        emergency_telephone,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="componentCode != null" >
        component_code,
      </if>
      <if test="occupationCodeKey != null" >
        occupation_code,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="nativePlace != null" >
        native_place,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="hobbies != null" >
        hobbies,
      </if>
      <if test="studentResources != null" >
        student_resources,
      </if>
      <if test="otherResources != null" >
        other_resources,
      </if>
      <if test="costResources != null" >
        cost_resources,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="codeNo != null" >
        #{codeNo,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="nameSpell != null" >
        #{nameSpell,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="stuPictureUrl != null" >
        #{stuPictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null" >
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="QQ != null" >
        #{QQ,jdbcType=VARCHAR},
      </if>
      <if test="YY != null" >
        #{YY,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="cardFrontAddress != null" >
        #{cardFrontAddress,jdbcType=VARCHAR},
      </if>
      <if test="cardReverseAddress != null" >
        #{cardReverseAddress,jdbcType=VARCHAR},
      </if>
      <if test="educationBackgroundKey != null" >
        #{educationBackgroundKey,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPerson != null" >
        #{emergencyPerson,jdbcType=VARCHAR},
      </if>
      <if test="contratRelationshipsCode != null" >
        #{contratRelationshipsCode,jdbcType=VARCHAR},
      </if>
      <if test="emergencyTelephone != null" >
        #{emergencyTelephone,jdbcType=CHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=CHAR},
      </if>
      <if test="componentCode != null" >
        #{componentCode,jdbcType=VARCHAR},
      </if>
      <if test="occupationCodeKey != null" >
        #{occupationCodeKey,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="hobbies != null" >
        #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="studentResources != null" >
        #{studentResources,jdbcType=VARCHAR},
      </if>
      <if test="otherResources != null" >
        #{otherResources,jdbcType=VARCHAR},
      </if>
      <if test="costResources != null" >
        #{costResources,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <!-- 添加学员专业表 -->
  <insert id="insertStuProfessional" >
    insert into vip_student_professional
        (student_id,op_pro_id, profession_code,amount_payable,pay_method,payment,
        is_arrears,arrears,is_refund,refund_monetary,refund_reason,status,
        change_time,change_reason,remark,enter_date,is_valid,create_time,
        creator) values
        <foreach collection="list" item="item" index="index" separator="," >
       ( #{item.studentId,jdbcType=INTEGER},#{item.opProId,jdbcType=INTEGER},#{item.professionCode,jdbcType=VARCHAR},
        #{item.amountPayable,jdbcType=DECIMAL},#{item.payMethod,jdbcType=VARCHAR},#{item.payment,jdbcType=DECIMAL},
        #{item.isArrears,jdbcType=CHAR},#{item.arrears,jdbcType=DECIMAL},#{item.isRefund,jdbcType=CHAR},
        #{item.refundMonetary,jdbcType=DECIMAL},#{item.refundReason,jdbcType=VARCHAR}, #{item.statues,jdbcType=VARCHAR},
        #{item.changeTime,jdbcType=TIMESTAMP},#{item.changeReason,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR},
        #{item.enterDate,jdbcType=DATE},#{item.isValid,jdbcType=CHAR},#{item.createTime,jdbcType=TIMESTAMP},
        #{item.creator,jdbcType=VARCHAR})
        </foreach>
  </insert>
  
  <!-- 修改学员信息表 -->
  <update id="updateStuArchives" parameterType="com.moon.vip.infra.vo.student.StudentVO" >
    update vip_student_archives
    <set >
      <if test="codeNo != null" >
        code_no = #{codeNo,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null" >
        name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="nameSpell != null" >
        name_spell = #{nameSpell,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="stuPictureUrl != null" >
        stu_picture_url = #{stuPictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null" >
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="QQ != null" >
        QQ = #{QQ,jdbcType=VARCHAR},
      </if>
      <if test="YY != null" >
        YY = #{YY,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="cardFrontAddress != null" >
        card_front_address = #{cardFrontAddress,jdbcType=VARCHAR},
      </if>
      <if test="cardReverseAddress != null" >
        card_reverse_address = #{cardReverseAddress,jdbcType=VARCHAR},
      </if>
      <if test="educationBackgroundKey != null" >
        education_background = #{educationBackgroundKey,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPerson != null" >
        emergency_person = #{emergencyPerson,jdbcType=VARCHAR},
      </if>
      <if test="contratRelationshipsCode != null" >
        contrat_relationships_code = #{contratRelationshipsCode,jdbcType=VARCHAR},
      </if>
      <if test="emergencyTelephone != null" >
        emergency_telephone = #{emergencyTelephone,jdbcType=CHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=CHAR},
      </if>
      <if test="componentCode != null" >
        component_code = #{componentCode,jdbcType=VARCHAR},
      </if>
      <if test="occupationCodeKey != null" >
        occupation_code = #{occupationCodeKey,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="hobbies != null" >
        hobbies = #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="studentResources != null" >
        student_resources = #{studentResources,jdbcType=VARCHAR},
      </if>
      <if test="otherResources != null" >
        other_resources = #{otherResources,jdbcType=VARCHAR},
      </if>
      <if test="costResources != null" >
        cost_resources = #{costResources,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 验正学员QQ信息 -->
  <select id="validateStuQQ" resultType="java.lang.Integer" parameterType="com.moon.vip.infra.vo.student.StudentVO" >
    select count(1) from
    vip_student_archives vip
    where 
    <if test="id != null" >
        vip.ID != #{id,jdbcType=INTEGER} and
      </if>
        vip.QQ = #{QQ,jdbcType=VARCHAR}
  </select>
  
  <!-- 修改学员专业信息表 -->
   <update id="updateStuProfessional" parameterType="com.moon.vip.infra.vo.student.StuProfessionalVO" >
    update vip_student_professional
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="opProId != null" >
        op_pro_id = #{opProId,jdbcType=INTEGER},
      </if>
      <if test="professionCode != null">
        profession_code = #{professionCode,jdbcType=VARCHAR},
      </if>
      <if test="amountPayable != null" >
        amount_payable = #{amountPayable,jdbcType=DECIMAL},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="isArrears != null" >
        is_arrears = #{isArrears,jdbcType=CHAR},
      </if>
      <if test="arrears != null" >
        arrears = #{arrears,jdbcType=DECIMAL},
      </if>
      <if test="isRefund != null" >
        is_refund = #{isRefund,jdbcType=CHAR},
      </if>
      <if test="statues != null" >
        status = #{statues,jdbcType=CHAR},
      </if>
      <if test="changeTime != null" >
        change_time = #{changeTime,jdbcType=CHAR},
      </if>
      <if test="changeReason != null" >
        change_reason = #{changeReason,jdbcType=CHAR},
      </if>
      <if test="refundMonetary != null" >
        refund_monetary = #{refundMonetary,jdbcType=DECIMAL},
      </if>
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="enterDate != null" >
        enter_date = #{enterDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{pId,jdbcType=INTEGER}
  </update>
  
  <!-- 根据id查询的专业 -->
  <select id="selectCourseById" resultType="com.moon.vip.infra.vo.student.ClassVO">
     SELECT p.ID AS id,p.`name` AS courseName,p.partent_id AS partentId,p.is_valid AS isValid,
     t.code_key AS codeKey,t.code_value AS codeValue 
     FROM vip_organizational_professional p,vip_code_table t
     WHERE
         t.code_key =p.ID AND p.type ='pro' AND p.is_valid ='Y'
         AND p.ID =#{id}
     LIMIT 0,1;    
  </select>
  
  <!-- 查询所有的专业 -->
  <select id="selectCourse" resultType="com.moon.vip.infra.vo.student.ClassVO" parameterType="java.lang.String">
     SELECT p.ID AS id,p.`name` AS courseName,p.partent_id AS partentId,p.is_valid AS isValid,
     t.code_key AS codeKey,t.code_value AS codeValue 
     FROM vip_organizational_professional p,vip_code_table t
     <where>
       t.code_key =p.ID AND p.type ='pro' AND p.is_valid ='Y'
       <if test="courseName != null and courseName != ''">
         AND p.`name` = #{courseName}
       </if>
     </where>
  </select>
  
  <!-- 查询是否有保存了学员的基本信息 -->
  <select id="selectPersonalDetail" resultType="com.moon.vip.infra.vo.student.StudentVO">
     SELECT A.ID AS id,A.`name` AS stuName, A.QQ AS QQ 
     FROM vip_student_archives A 
     <where>
        A.`name` =#{stuName} AND A.QQ =#{QQ} AND A.is_valid ='Y'  
        <if test="id != null">
          AND A.ID = #{id}
        </if>
     </where> 
  </select>
  
  <!-- 查询是否有存在学员信息的记录 -->
  <select id="selectPersonalDetailCount" resultType="java.lang.Integer" parameterType="com.moon.vip.infra.vo.student.StudentVO">
     SELECT COUNT(*)
     FROM vip_student_archives A 
     <where>
        A.`name` =#{stuName} AND A.QQ =#{QQ} AND A.is_valid ='Y'  
        <if test="id != null">
          AND A.ID = #{id}
        </if>
     </where> 
  </select>
  
  
  <!-- 查询生成的学员编号是否存在 -->
  <select id="selectStudentCode" parameterType="java.lang.String" resultType="java.lang.Integer">
     SELECT COUNT(*) FROM vip_student_archives WHERE code_no =#{codeNo};
  </select> 
  
  <!-- 删除未分班学员信息  将is_valid更新为N   hanfeng -->
  <update id="updateValidArch" parameterType="java.lang.Integer">
 	UPDATE vip_student_archives
	SET is_valid = 'N' 
	WHERE
		ID = #{id, jdbcType=INTEGER};
  </update>
  
  <!-- 删除身份证图片信息-->
  <update id="deleteImg" >
    update  vip_student_archives 
    <set>
	    <if test="parms =='imgIdcardA'">
	       card_front_address =""
	    </if>
	    <if test="parms =='imgIdcardB'">
	       card_reverse_address =""
	    </if>
    </set>
    WHERE ID = #{stuId} 
  </update>
  
  
<!--  学生授权情况-->
  <select id="getAuthStuInfo" resultType="com.moon.vip.infra.vo.student.StuAuthVO">
     SELECT a.ID AS id,a.`name` AS name,
	a.telephone AS telephone,a.QQ AS qq,
	a.auth_status as authStatus ,a.home_id as account
	FROM vip_student_archives a
	<where> 
	EXISTS(
           SELECT null 
             FROM vip_student_professional p
		    WHERE p.student_id = a.ID  AND p.is_valid = 'Y'
			  AND p.op_pro_id in 
			<foreach collection="opClaIds" item="Id" index="index"
		       				 open="(" close=")" separator=","> 
		    	  #{Id}	
			</foreach>
	 	<if test="searchOpClaIds != null" >
			AND p.op_pro_id in
			<foreach collection="searchOpClaIds" item="Id" index="index"
	     					 open="(" close=")" separator=","> 
	     	  #{Id}	
	       </foreach>
	    </if>
    )
      <if test="authStatus !=null and authStatus !='' ">
	    AND auth_status = #{authStatus,jdbcType=VARCHAR}
	 </if>
	 <if test="searchKey !=null and searchKey !='' ">
	    AND (a.`name` like CONCAT(CONCAT('%',#{searchKey}),'%')
	     OR  a.telephone like CONCAT(CONCAT('%',#{searchKey}),'%')
	     OR  a.QQ like CONCAT(CONCAT('%',#{searchKey}),'%')
	     OR  a.home_id like CONCAT(CONCAT('%',#{searchKey}),'%'))
	 </if>
	
	</where>
	ORDER BY a.ID DESC
    limit #{startNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select> 
  
   
  <!-- 查询总数 -->
  <select id="getCountStuByParams" resultType="java.lang.Integer" parameterType="com.moon.vip.infra.vo.sys.AuthSearchParams">
   SELECT COUNT(1)
	FROM vip_student_archives a
	<where> 
	EXISTS(
           SELECT null 
             FROM vip_student_professional p
		    WHERE p.student_id =a.ID AND p.is_valid = 'Y'
			  AND p.op_pro_id in 
			<foreach collection="opClaIds" item="Id" index="index"
		       				 open="(" close=")" separator=","> 
		    	  #{Id}	
			</foreach>
	 	<if test="searchOpClaIds != null" >
			AND p.op_pro_id in
			<foreach collection="searchOpClaIds" item="Id" index="index"
	     					 open="(" close=")" separator=","> 
	     	  #{Id}	
	       </foreach>
	    </if>
    )
     <if test="authStatus !=null and authStatus !='' ">
	    AND auth_status = #{authStatus,jdbcType=VARCHAR}
	 </if>
	 <if test="searchKey !=null and searchKey !='' ">
	    AND (a.`name` like CONCAT(CONCAT('%',#{searchKey}),'%')
	     OR  a.telephone like CONCAT(CONCAT('%',#{searchKey}),'%')
	     OR  a.QQ like CONCAT(CONCAT('%',#{searchKey}),'%')
	     OR  a.home_id like CONCAT(CONCAT('%',#{searchKey}),'%'))
	 </if>
	</where>
  </select>
  <!-- 通过官网账号获取学生 -->
  <select id="getStuByAccount" resultType="com.moon.vip.infra.vo.student.StuAuthVO">
    SELECT a.ID AS id,a.`name` AS name,
	a.telephone AS telephone,a.QQ AS qq,
	a.auth_status as authStatus ,a.home_id as account
	FROM vip_student_archives a where home_id = #{account,jdbcType = VARCHAR}
	and auth_status = 'Y'
  
  </select>
   <!-- 授权学生 -->
  <update id="authStudent">
   update vip_student_archives set
     home_id = #{account,jdbcType = VARCHAR},
     modify_user = #{empCode,jdbcType = VARCHAR},
     modify_time = now(),
     auth_status = 'Y' 
   Where ID = #{stuId,jdbcType = INTEGER}
  </update>
	<update id="cancelAuthByStuIds">

		update vip_student_archives set
		modify_user = #{empCode,jdbcType = VARCHAR},
		modify_time = now(),
		auth_status = 'N'
		Where ID in
		<foreach collection="stuIdArray" item="Id" index="index" open="("
			close=")" separator=",">
			#{Id}
		</foreach>


	</update>
</mapper>